name: Build boot image
on:
  workflow_dispatch:
     inputs:
      KERNEL_SOURCE:
        description: 'Kernel Source'
        required: true
        default: 'https://github.com/Terminator-J/crdroid_kernel_oneplus_sdm845'
      KERNEL_SOURCE_BRANCH:
        description: 'Branch'
        required: true
        default: '13.0-m00'
      KERNEL_BUILD_CONFIG:
        description: 'Kernel Build Config'
        required: true
        default: 'https://raw.githubusercontent.com/Three-taile-dragon/KernelSU_action/main/configs/build.config.wayne'
      BOOTIMAGE:
        description: 'Boot image to get ramdisk'
        required: true
        default: 'https://forum.xda-developers.com/attachments/crdroidandroid-13-0-20230112-fajita-v9-0_boot-img.5808997/'
      USE_KPROBES:
        description: 'If you want to use kprobes, please type "true"'
        default: 'true'
        required: true
      KERNEL_DEFCONFIG:
        description: 'KERNEL_DEFCONFIG'
        required: true
        default: 'enchilada_defconfig'
        

jobs:
  build:
    name: Build boot image
    runs-on: ubuntu-latest
    steps:
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
        cd $GITHUB_WORKSPACE
        git clone https://gerrit.googlesource.com/git-repo
        mkdir kernel_workspace && cd kernel_workspace
        git config --global user.name "Github Action"
        git config --global user.email "Action@github.com"
        ../git-repo/repo init --depth=1 -u https://github.com/Three-taile-dragon/KernelSU_Action -b main
        ../git-repo/repo sync -j$(nproc --all)
        sed -i '/SOURCE_DATE_EPOCH/d' build/_setup_env.sh
        sed -i 's/build-host/Mac-Pro/' build/_setup_env.sh
        sed -i 's/build-user/$(echo ${{ github.actor }} | tr A-Z a-z)/' build/_setup_env.sh
        wget -O boot.img ${{ github.event.inputs.BOOTIMAGE }}
        tools/mkbootimg/unpack_bootimg.py --boot_img=boot.img

    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone ${{ github.event.inputs.KERNEL_SOURCE }} -b ${{ github.event.inputs.KERNEL_SOURCE_BRANCH }} android-kernel --depth=1

    - name: Download kernel build config
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        wget -O build.config ${{ github.event.inputs.KERNEL_BUILD_CONFIG }}

    - name: Setup KernelSU
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        curl -LSs "https://raw.githubusercontent.com/Three-taile-dragon/KernelSU/main/kernel/setup.sh" | bash -
        if [ ${{ github.event.inputs.USE_KPROBES }} = true ]; then
            echo "CONFIG_KPROBES=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
            echo "CONFIG_HAVE_KPROBES=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
            echo "CONFIG_KPROBE_EVENTS=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
        fi

    - name: Build boot-su.img
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        BRANCH=${{ github.event.inputs.KERNEL_SOURCE_BRANCH }} BUILD_CONFIG=android-kernel/build.config build/build.sh

    - name: Upload boot-su.img
      uses: actions/upload-artifact@v3
      with:
        name: boot-su-${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}-${{ env.BUILD_TIME }}.img
        path: kernel_workspace/out/${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}/dist/boot.img
    - name: Collect Outputs 收集所有输出文件
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        zip -r output.zip ./out
    - name: Upload Outputs 上传输出文件
      uses: actions/upload-artifact@v3
      with:
        name: KernelSu-Outputs-${{ env.BUILD_TIME }}.zip
        path: kernel_workspace/output.zip
